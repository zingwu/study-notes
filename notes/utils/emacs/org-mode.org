#+TITLE:      org-mode学习

* 目录                                                    :TOC_4_gh:noexport:
- [[#简介][简介]]
- [[#文档结构][文档结构]]
  - [[#大纲][大纲]]
  - [[#标题][标题]]
  - [[#文本列表][文本列表]]
  - [[#脚注][脚注]]
- [[#表格][表格]]
- [[#链接][链接]]
  - [[#链接格式][链接格式]]
- [[#待办事项todo][待办事项(TODO)]]
- [[#标签tags][标签(tags)]]
  - [[#章标题][章标题]]
- [[#时间][时间]]
- [[#特殊文本格式][特殊文本格式]]
  - [[#数学符号][数学符号]]
- [[#富文本导出][富文本导出]]
- [[#注释][注释]]
- [[#footnotes][Footnotes]]

* 简介
org-mode 是 Emacs 提供的一个强大的编辑模式，可以用于做会议笔记以及制作各种待办事项（GDT）。其语法类似于 Markdown 但是提供了比 Markdown 更多的操作，再加上 Emacs 强大的编辑功能，能给笔记增加很多动态的操作（能纯文本上实现折叠、展开、树状视图、表格求和、求代码运行结果等功能），可以说 org-mode 是最强大的标记语言。

* 文档结构
** 大纲
Org 是在大纲模式之上实现的。大纲模式可以让我们用层次结构来组织文档，这（至少对我来说）是笔记和想法的最好实现方式。这种结构可以折叠（隐藏）文档的一部分而只显示文档的大概结构或者只显示我们正在处理的部分。Org 大大简化了大纲模式的使用，它把大纲模式的整个显示/隐藏功能整合到了一个命令中：org-cycle，这个命令绑定到了 TAB 键上。
常用快捷键如下：
+ S+Tab 展开、折叠所有章节
+ Tab 对光标所在章节进行展开、折叠
** 标题
标题定义了大纲树的结构。它以处于一行左边缘的一个或多个星号开头。例如：
#+begin_src org
  ,* Top level
  ,** second level
  ,*** third level
#+end_src
常用快捷键如下:
+ 移动：
  + C-c C-n 跳转到下一个标题
  + C-c C-p 跳转到上一个标题
  + C-c C-f 跳转到下一个同级标题
  + C-c C-b 跳转到上一个同级标题
  + C-c C-u 回到上层标题
+ 结构编辑：
  + M+left/right 升级/降级标题
  + M+RET RET 插入一个同级标题
** 文本列表
　列表是文本中一个比较常用的元素，可以列出各种待完成的事项等。org-mode 提供了一种很独特的功能，可以加入 checkbok（实际就是加入一对中间有空格的方括号[ ]）标记任务的完成状况，而且如果一个总任务有多个子任务，还可以根据子任务的完成情况计算总进度（只需要在总任务后面添加一对方括号，里面加上%或/ 如[0%],[0/1]）。列表分为有序和无序两种，有序列表以 1.或 1)开头，无序列表以+或-开头 后面，同样，后面要跟一个空格。输入一个无序列表：
+ tree
  + branch1
  + branch2
输入一个有序列表：
1. [-] 任务1 [66%]
   1) [ ] 子任务1
   2) [X] 子任务2
   3) [X] 子任务3
2. [] 任务 2

常用快捷键如下：
+ M+RET M+RET 插入一个同级列表项
+ C-c C-c 改变 checkbox 状态
+ M-left/right 改变列表项层级关系
+ M-up/dowm 上下移动列表项
** 脚注
用[fn:1]的方式插入脚注，而在最下面插入。
常用快捷键如下：
+ C-c C-x f 当光标在脚注处，跳转到第一个脚注处。其他情况下，新建一个脚注。
+ C-c C-c 在定义与脚注之间跳转

* 表格
表格常用于数据展示，org-mode 提供了方便的列表操作。其中最独特的是支持类似于 Excel 的表格函数，可以完成简单的求和等操作。
新建表格的方法有以下几种：
1. 先键入表头，例如：
   #+begin_src org
     |name|phone|age|
     |-
   #+end_src
   然后按 tab就能自动生成一张表格了。
2. 先键入表头，例如：
   #+begin_src org
     |name|phone|age|
   #+end_src
   然后C-c RET 就可以生成一张表格了。如果需要header，可以C-c - 添加。
3. 通过C-c | 这个快捷键来快速创建一个指定大小的表格。


下面体验下 org-mode 的强大的表格函数。我们在 total 列任选一个位置，输入=$1+$2 ，然后按 C-u C-c C-c，org-mode 能自动为我们计算所有的和，并放到第三列。最后完成的表格如下：

| num1 | num2 | total |
|------+------+-------|
|    1 |    2 |     3 |
|    9 |    2 |    11 |
|    2 |    3 |     5 |
|    4 |    4 |     8 |
#+TBLFM: $3=$1+$2

常用快捷键如下:
+ 调整和区域移动：
  + C-c C-c 对齐表格
  + Tab 跳到右边的单元格，最后一行会新建一行
  + S-Tab 跳到左边的单元格
  + RET 跳到下方的单元格，最后一行会新建一行
+ 编辑行和列：
  + M-left/right 左/右移动当前列
  + M-S-left 删除当前列
  + M-S-right 光标位置左边新建一列
  + M-up/down 上/下移动当前行
  + M-S-up 删除当前行
  + M-S-down 在当前行上面添加一行

* 链接
链接用于链接一些资源地址，如图片、文件、URL 等。
** 链接格式
#+begin_src org
[[link][description]]
[[link]]
#+end_example

* 待办事项(TODO)
TODO 是 org-mode 最具特色的一个功能，也是 org-mode 设计的初衷，org-mode 的作者本意是用其来完成一个个人时间管理程序（GDT）。因此，可以用 org-mode 来做一个个人时间管理工具下面我们来看怎么写 TODO。TODO 也是一类标题，因此也需要用*开头，在 Emacs 中输入：
#+begin_src org
  ,*** TODO [# A] 任务 1
  ,*** TODO [# B] 任务 2
  ,*** TODO 总任务 [50%]
  ,**** TODO 子任务 1
  ,**** DONE 子任务 2 [100%]
  CLOSED: [2020-11-23 一 14:05]
  + [X] subsub1 [2/2]
    + [X] subsub2
    + [X] subsub3

      一些常用操作如下：
      + C-c C-t 变换 TODO 的状态
      + C-c / t 以树的形式展示所有的 TODO
      + C-c C-c 改变 checkbox 状态 - C-c
      + 设置优先级（方括号里的 ABC）
      + M-S-RET 插入同级 TODO 标签
#+end_src

* 标签(tags)
在 org-mode 中，可以给每一章节添加一个标签，我们可以通过树的结构来查看所有带标签的章节。在每一节中，子标题的标签会继承父标题标签。 输入：
** 章标题                                                        :work:learn:


* 时间
org-mode 可以利用 Emacs 的时间空间插入当前时间。 输入 C-c . 会出现一个日历，我们点选相应的时间即可插入。
<2020-11-23 一>
时间前可以加 DEADLINE:和 SCHEDULED:表示时间的类型如：
DEADLINE:<2020-12-01 二>
下面是一个常见的 TODO 模板：
TODO 学习 org
SCHEDULED: <2020-11-20 五>
DEADLINE: <2020-11-27 五>
常见命令如下：
C-c . 插入时间

* 特殊文本格式
**bold**
//italic//
__underline__
==code==
~~verbatim~~
++string-through++

** 数学符号
org 支持输入指数等数学符号，例如： n^2, 如果想看到展示效果，可以在当前 buffer 临时开启 org-toggle-pretty-entities，开启快捷键为 C-c C-x \

* 富文本导出
org-mode 的强大之处还在于它能到出成各种不同的格式，例如 html、pdf 等，在导出时，可以加入一些说明符号，来制定导出选项，常用导出符号如下：

* 注释

* Footnotes

[fn:1] 本文参考自https://www.cnblogs.com/Open_Source/archive/2011/07/17/2108747.html
