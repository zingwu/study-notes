#+TITLE:      复杂度分析

* 目录                                                    :TOC_4_gh:noexport:
- [[#大-o-复杂度分析法][大 O 复杂度分析法]]

* 大 O 复杂度分析法
  算法的执行效率，粗略的讲就是算法的执行时间。这里引入大 O 表示法的概念，它用于描述算法的性能和复杂程度。一般情况下考虑的都是时间复杂度，它有一个公式：
  #+begin_quote
  T(n) = O(f(n))
  #+end_quote
  其中，T(n)表示代码执行的时间；n表示数据规模的大小；f(n)表示每行代码执行的次数总和。因为这是一个公式，所以用 f(n)来表示。公式中的 O，表示代码的执行时间 T(n)与 f(n)表达式成正比。
  下表格展示大 O 表示法的几种常见时间复杂度量级：

  | 符号      | 名称       |
  | ----      | ------     |
  | O(1)      | 常量阶     |
  | O(log(n)) | 对数阶     |
  | O(n)      | 线性阶     |
  | O(nlogn)  | 线性对数阶 |
  | O(n^2)     | 平方阶     |
 | O(n^3)     | 立方阶     |


  
